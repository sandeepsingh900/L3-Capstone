package com.capstone.customer.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class CapstoneCustomer extends Contract {
    private static final String BINARY = "\n";

    public static final String FUNC_ADDCUSTOMER = "addCustomer";

    public static final String FUNC_UPDATECUSTOMER = "updateCustomer";

    public static final String FUNC_GETCUSTOMERBYID = "getCustomerById";

    public static final String FUNC_GETCUSTOMERBYSSN = "getCustomerBySSN";

    public static final String FUNC_GETCUSTOMERCOUNT = "getCustomerCount";

    @Deprecated
    protected CapstoneCustomer(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CapstoneCustomer(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CapstoneCustomer(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CapstoneCustomer(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> addCustomer(Utf8String ssn, Utf8String firstName, Utf8String lastName, Utf8String city, Utf8String state, Utf8String streetAddress, Uint256 dob) {
        final Function function = new Function(
                FUNC_ADDCUSTOMER, 
                Arrays.<Type>asList(ssn, firstName, lastName, city, state, streetAddress, dob), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateCustomer(Utf8String ssn, Utf8String firstName, Utf8String lastName, Utf8String city, Utf8String state, Utf8String streetAddress, Uint256 dob) {
        final Function function = new Function(
                FUNC_UPDATECUSTOMER, 
                Arrays.<Type>asList(ssn, firstName, lastName, city, state, streetAddress, dob), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple7<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>> getCustomerById(Uint256 id) {
        final Function function = new Function(FUNC_GETCUSTOMERBYID, 
                Arrays.<Type>asList(id), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple7<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>>(
                new Callable<Tuple7<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>>() {
                    @Override
                    public Tuple7<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>(
                                (Utf8String) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2), 
                                (Utf8String) results.get(3), 
                                (Utf8String) results.get(4), 
                                (Utf8String) results.get(5), 
                                (Uint256) results.get(6));
                    }
                });
    }

    public RemoteCall<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>> getCustomerBySSN(Utf8String ssn) {
        final Function function = new Function(FUNC_GETCUSTOMERBYSSN, 
                Arrays.<Type>asList(ssn), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>>(
                new Callable<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>>() {
                    @Override
                    public Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Uint256>(
                                (Utf8String) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2), 
                                (Utf8String) results.get(3), 
                                (Utf8String) results.get(4), 
                                (Uint256) results.get(5));
                    }
                });
    }

    public RemoteCall<Uint256> getCustomerCount() {
        final Function function = new Function(FUNC_GETCUSTOMERCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    @Deprecated
    public static CapstoneCustomer load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CapstoneCustomer(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CapstoneCustomer load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CapstoneCustomer(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CapstoneCustomer load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CapstoneCustomer(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CapstoneCustomer load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CapstoneCustomer(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CapstoneCustomer> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CapstoneCustomer.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CapstoneCustomer> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CapstoneCustomer.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<CapstoneCustomer> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CapstoneCustomer.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CapstoneCustomer> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CapstoneCustomer.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
